name: App CI

on:
  push:
    branches:
    - main
    tags:
    - 'v*.*.*'

env:
  BUCKET_NAME: ${{ github.ref_type == 'tag' && secrets.PROD_BUCKET || secrets.DEV_BUCKET }}
  API_URL: ${{ github.ref_type == 'tag' && vars.PROD_API_URL || vars.DEV_API_URL }}
  WEBSITE_URL: ${{ github.ref_type == 'tag' && vars.PROD_WEBSITE_URL || vars.DEV_WEBSITE_URL }}
  ENV: ${{ github.ref_type == 'tag' && 'prod' || 'dev' }}

jobs:

  release:
    runs-on: ${{ matrix.platform.os }}

    strategy:
        matrix:
          platform:
          - os: windows-latest
            extention: exe
          # - os: macos-latest
          #   extention: dmg

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install Node.js, NPM and Yarn
      uses: actions/setup-node@v1
      with:
        node-version: 18.12.1

    - name: Extract version
      run: |
        version=`node -p "require('./package.json').version"`
        echo "version=$version" >> $GITHUB_OUTPUT
      shell: bash
      id: version

    - name: Build app
      run: |
        npm i
        npm run ci:${{ env.ENV }}
      id: build

    - name: Pre-deploy
      run: |
        find out/make -name "*.exe" -exec sh -c "mv '{}' '${{ steps.version.outputs.version}}.${{ matrix.platform.extention }}'" \;
      shell: bash

    - id: auth
      name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: '${{ secrets.GCLOUD_SERVICE_ACCOUNT }}'

    - id: upload
      uses: google-github-actions/upload-cloud-storage@v2
      with:
        path: ${{ steps.version.outputs.version}}.${{ matrix.platform.extention }}
        destination: '${{ env.BUCKET_NAME }}/lesson-viewer/v1/'
        parent: false

    - name: Deploy Stage
      uses: fjogeleit/http-request-action@v1
      with:
        url: '${{ env.API_URL }}/api/v2/viewer/version?version=${{ steps.version.outputs.version}}'
        method: 'POST'
